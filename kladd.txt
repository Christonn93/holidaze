import { createContext, useState } from "react";
import { getProfile } from "../api/auth/profile/profile";

const AuthContext = createContext({
 userData: [],
 getStoredUserData: () => {},
 storeUserData: () => {},
 getUserStatus: () => {},
 clearUserData: () => {},
 getProfileData: () => {},
});

export const AuthProvider = ({ children }) => {
 const [auth, setAuth] = useState();

 function storeUserData() {
  const userData = localStorage.getItem("UserData");
  const localData = localStorage.setItem("UserDataAuth", userData);
  setAuth(localData);
 }

 function getStoredUserData() {
  const localData = localStorage.getItem("UserDataAuth");
  return JSON.parse(localData);
 }

 function getUserStatus() {
  const localData = localStorage.getItem("UserDataAuth");
  const data = JSON.parse(localData);
  return data;
 }

 function getProfileData() {
  return getProfile();
 }

 function clearUserData() {
  localStorage.setItem("UserDataAuth", ["No user data"]);
  localStorage.setItem("ApiToken", ["No token"]);
  localStorage.setItem("isLoggedIn", [false]);
 }

 const contextValue = {
  userData: auth,
  getStoredUserData,
  storeUserData,
  getUserStatus,
  clearUserData,
  getProfileData,
 };

 return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>;
};

export default AuthContext;


import { createContext, useState } from "react";

// Importing functions
// import { storeUserData, clearUserData, getStoredUserData, getUserStatus, getProfileData } from "./contextFunctions/index";

const AuthContext = createContext({
 authData: [],
 userData: [],
 booking: [],
 venue: [],
 authenticateUser: () => {},
 getStoredUserData: () => {},
 storeUserData: () => {},
 getUserStatus: () => {},
 clearUserData: () => {},
 getProfileData: () => {},
 userBooking: () => {},
 userVenue: () => {},
});

export const AuthProvider = ({ children }) => {
 const [auth, setAuth] = useState();
 const [user, setUser] = useState();
 const [venue, setVenue] = useState();
 const [booking, setBooking] = useState();

 // Auth functions
 function authenticateUser() {
  return setAuth();
 }

 // User functions
 function storeUserData(data) {
  return setUser(data);
 }

 function getStoredUserData() {}

 function getUserStatus() {}

 function getProfileData() {}

 function clearUserData() {
  localStorage.setItem("UserDataAuth", ["No user data"]);
  localStorage.setItem("ApiToken", ["No token"]);
  localStorage.setItem("isLoggedIn", [false]);
 }

 // Venue function
 function userVenue() {
  setVenue();
 }

 // Booking function
 function userBooking() {
  setBooking();
 }

 const contextValue = {
  authData: auth,
  userData: user,
  booking: booking,
  venue: venue,
  authenticateUser,
  getStoredUserData,
  storeUserData,
  getUserStatus,
  clearUserData,
  getProfileData,
  userBooking,
  userVenue,
 };

 return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>;
};

export default AuthContext;